#!/usr/bin/env python3

import subprocess
from typing import Optional, List
import os
from time import sleep
import sys
import zlib


class File:

    def __init__(self, path: str, dir: Optional[str] = None):
        if os.path.isdir(path):
            dir = os.path.basename(path)
        self.path = path
        self.dir = dir

    def arg(self):
        if self.dir is None:
            return self.path
        return f"{self.dir}={self.path}"


def crc32(data):
    return hex(zlib.crc32(data) & 0xFFFFFFFF)


class Files:

    def __init__(self, list: List[File] = None):
        self.list = list if list is not None else []

    def add(self, filename: str):
        self.add_file(File(filename))

    def add_file(self, file):
        self.list.append(file)

    def generate_checksum_file(self):
        filename = "checksum.crc32"
        output = open(filename, "w")
        for file in self.list:
            file = open(file.path, "rb")
            crc = crc32(file.read())
            file.close()
            name = os.path.basename(file.path)
            if file.dir is not None:
                name = os.path.join(file.dir, name)
            output.write(f"{crc}: {name}")
        output.close()


class Disc:

    def __init__(self, title: str, device: str = "/dev/dvdrw"):
        self.title = title
        self.device = device

    def burn(self, files: Files):
        args = [
            "growisofs", "-Z", self.device, '-R', '-J', '-V', self.title,
            '-graft-points'
        ]
        args.extend(f.arg() for f in files.list)
        subprocess.run(args, check=True)
        self._finish()

    def _finish(self):
        args = ["growisofs", "-M", f"{self.device}=/dev/zero"]
        tries = 0
        while tries < 5:
            sleep(10 * (tries + 1))
            tries += 1
            try:
                return subprocess.run(args, check=True)
            except Exception:
                continue
        raise Exception("Unable to finish burning disc")

    def burn_iso(self, path: str):
        args = ["growisofs", "-dvd-compat", "-Z", f"{self.device}={path}"]
        subprocess.run(args, check=True)
        self._finish()


if __name__ == '__main__':
    import argparse
    import datetime

    now = datetime.datetime.now()
    date = now.strftime("%m-%d-%Y_%H%M%S")

    parser = argparse.ArgumentParser()
    parser.add_argument('--iso', action='store_true', default=False)
    parser.add_argument('files',
                        type=str,
                        nargs='+',
                        help='files and directories to write to disc')
    parser.add_argument('--title', default='DISC-' + date, help='disc name')
    parser.add_argument('--device', default='/dev/dvdrw', help='device path')
    args = parser.parse_args()

    disc = Disc(args.title, device=args.device)
    if args.iso:
        disc.burn_iso(args.files[0])
    else:
        files = Files([File(f) for f in args.files])
        disc.burn(files)
